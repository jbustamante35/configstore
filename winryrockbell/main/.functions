#############
# FUNCTIONS #
#############

# create directory and move to it
mvcd () {
    mkdir $1;
    cd $1;
}

# move to directory and show contents
cl () {
    cd $1 && la -F;
}

# unzip into directory of the same name as zip file
uzp () {
    nm=$1;
    unzip "$nm".zip -d "$nm";
}

# check current status of dropbox syncing
drchk () {
    cd $HOME/Dropbox
    dropbox-cli filestatus && printf "\n\n\n" && dropbox-cli status
    printf "\n"
    cd -
    dropbox-cli filestatus && printf "\n"
}

# open modified files from git repository with vim
gchk () {
    vim "$(echo "$(git status | egrepi modified)" | awk '{print $2}' | fzf)"
}

drrst () {
    dropbox-cli stop ;
    sleep 2 ;
    dropbox-cli start ;
}

# Select videos by file extension and choose video player
mvid () {
    ext="$1"
    sly="$2"
}

# Shortcut for converting tif to jpg
cnvv () {
    img="$1"
    pct="$2"
    ext="$(echo $img | cut -d'.' -f1)"

    convert -resize "$pct" "$img" "$fin".jpg
}

# Convert all files in directory
cnvall () {
    ext="$1"
    pct="$2"

    for i in *."$ext" ; do
        cnvv "$i" "$pct" ;
    done
}

# Setup VPN to JDev
vpnj () {
    killme="$1"
    vpn="openconnect"

    case "$killme" in
        k)
            megakill ssh 1;
            ;;
        *)
            sudo "$vpn" --protocol=gp uwmadison.vpn.wisc.edu -u jbustamante -b ;
            ;;
    esac
}

# Compile C code to bin directory
gcomp () {
    fin="$1"
    fout="$(echo $fin | cut -d'.' -f1)"
    typ="$(echo $fin | cut -d'.' -f2)"
    cbin="/home/jbustamante/Dropbox/ComputerProgramming/programminglanguages/c++/bin"
    case $typ in
        c)
            gcc="gcc"
            ;;
        cpp)
            gcc="g++"
            ;;
    esac
            $gcc $fin -o $cbin/$fout
            #echo $gcc $fin -o $cbin/$fout
}

# Pre and Post Zoom resolutions
prezoom () {
    xrandr --output eDP-1-1 --mode 1920x1080
    regencolors wal 1 ;
}

postzoom () {
    xrandr --output eDP-1-1 --mode 2048x1152 ;
    regencolors wal 1 ;
}

# Toggle touch screen
screenctl () {
    HID="hid_multitouch"
    cmd="$1"

    case "$cmd" in
        "on") sudo modprobe "$HID" ;;
        "off") sudo modprobe -r "$HID" ;;
        *) echo "Setting should be [on|off]" && exit ;;
    esac

}

# Clock CPU or Core temperatures
clock_cpu () {
    int="$2"
    case "$1" in
        speed)
            cmd='cat /proc/cpuinfo'
            regex="MHz"
            ;;

        temps)
            cmd="sensors"
            regex="Core "
            ;;

        fans)
            cmd="sensors"
            regex="fan"
            ;;

        *) ;;
    esac

    echo watch -n $int "$cmd | grep $regex |"
    watch -n $int "$cmd | grep $regex"
}

# Check hwmon or thermal devices
check_devices () {
    case "$1" in
        hwmon)
            din="/sys/class/hwmon/hwmon*"
            fin="name"
            ;;

        thermal)
            din="/sys/class/thermal/thermal_zone*"
            fin="type"
            ;;
        *)
            echo "Enter [hwmon|thermal]"
            din=""
            fin=""
            ;;
    esac

    for i in "$din"; do
        echo "$i: $(<$i/"$fin")";
    done
}

# vim: filetype=sh
