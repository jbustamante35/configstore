# vim: filetype=sh
#############
# FUNCTIONS #
#############

# create directory and move to it
mvcd () {
	mkdir $1;
	cd $1;
}

# move to directory and show contents
cl () {
	cd $1 && la -F;
}

# check current status of dropbox syncing
drchk () {
    cd $HOME/Dropbox;
    dropbox-cli filestatus && printf "\n" && dropbox-cli status;
    printf "\n";
    cd -;
    dropbox-cli filestatus ;
}

# unzip into directory of the same name
uzp () {
    nm=$1
    unzip "$nm".zip -d "$nm"
}

# Reload color schemes
clrs () {
    xrdb -load ~/.cache/wal/colors.Xresources;
    xrdb -merge ~/.Xresources;
}

# compile and run kotlin program
kotlinr () {
    echo Compiling, please wait...
	kotlinc $1 -include-runtime -d out.jar
	java -jar out.jar
}

# Reset pywal source colors and choose backend
wali () {
    bak="$1"
    sat="$2"

    wal -c ;
    clrs ;
    wal --backend "$bak" -i ~/.config/wall.jpg --saturate "$sat" -q ;
}

# Locate, Select, and Excecute [pipe locate and fzf into application]
lse () {
    # typ: search query for filtering by file or filetype
    # app: application to run selected file
    typ="$1"
    app="$2"
    ver="$3"

    case $ver in
        1)
            # Search through entire filesystem
            "$app" "$(locate "*$typ" | fzf)"
            ;;
        2)
            # Search through current directory tree
            "$app" "$(locate "$(pwd)/*$typ" | fzf)"
            ;;
        *)
            # Default to version 1
            "$app" "$(locate "*$typ" | fzf)"
            ;;
    esac
}

# Select video player and video type from current directory [default mpv]
mvid () {
    vt="$1"
    pl="$2"

    case "$pl" in
        "")
            mpv "$(ls *"$vt" | dmenu -l 30)"
            #ls *"$vt" | dmenu -l 30 | xargs -I {} mpv "{}"
            ;;
        *)
            "$pl" "$(ls *"$vt" | dmenu -l 30)"
            #ls *"$vt" | dmenu -l 30 | xargs -I {} "$pl" "{}"
            ;;
    esac
}

# Start tmux session on remote host
tsh () {
    host="$1"
    ssnname="$2"

    if [ -z "$ssnname" ]; then
        echo "Provide name of session [Example: tsh <host> main]"
        return 1;
    fi

    echo ssh "$host" -t "tmux -CC attach -t $ssnname || tmux -CC new $ssnname"
    ssh $host -t "tmux -CC attach -t $ssnname || tmux -CC new $ssnname"

}

# View VNC display
vnc2me () {
    dsp="$1"
    vncviewer localhost:"$dsp" -passwd ~/.vnc/passwd
}

# Screenshot setup
shttr () {
    pdir="$HOME/Pictures/screenshots/"
    sel="$1"
    #fout=$pdir/'%y%m%d_$wx$h_$n.png'

#    case "$sel" in
#        s)
#            # Selected window
#            scrot -s -e 'mv $f "$pdir"'
#            ;;
#        u)
#            # Active window
#            scrot -u -e 'mv $f "$pdir"'
#            ;;
#        f)
#            # Full screen
#            scrot -e 'mv $f "$pdir"'
#            ;;
#        *)
#            # Default to full screen
#            scrot -e 'mv $f' $pdir"
#            ;;
#    esac

    scrot "$sel" -e 'mv $f "$pdir.png"'
    printf "sel: $sel | dir: $pdir | fout: $f"

}

