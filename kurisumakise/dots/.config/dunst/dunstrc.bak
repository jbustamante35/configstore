# vim: ft=cfg
[global]
    ### Display ###
    # Monitor to display notification
    # Display notification on focused monitor
    # Window geometry: [{width}]x{height}[+/-{x}+/-{y}]
    # Show hidden messages
    # Shrink window if smaller than the width.
    # Window transparency [0 - 100]
    # Height of entire notification.
    # Height between two notifications
    # Padding between text and separator.
    # Horizontal padding.
    # Width of frame around notification window
    monitor             = 0
    follow              = mouse
    geometry            = "800x200-10+50"
    indicate_hidden     = yes
    shrink              = no
    transparency        = 25
    notification_height = 30
    separator_height    = 2
    padding             = 5
    horizontal_padding  = 5
    frame_width         = 2

    ### Text ###
    # Sort by urgency
    # Don't remove messages for length user is idle
    # Spacing between lines
    font           = Droid Sans Mono 10
    sort           = yes
    idle_threshold = 120
    line_height    = 0

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    ### Alignment of message text ###
    # Possible values are "left", "center" and "right"
    # Show age of message if message is older than show_age_threshold seconds
    # When word_wrap is set to no, specify where to ellipsize long lines
    # Possible values are "start", "middle" and "end"
    # Ignore newlines '\n' in notifications
    # Merge multiple notifications with the same content
    # Hide the count of merged notifications with the same content
    # Display indicators for URLs (U) and actions (A).
    alignment            = left
    show_age_threshold   = 60
    word_wrap            = yes
    ellipsize            = start
    ignore_newline       = no
    stack_duplicates     = true
    hide_duplicate_count = false
    show_indicators      = yes

    ### Icons ###
    # Paths to default icons.
    # Align icons left/right/off
    # Scale larger icons down to this size, set to 0 to disable
    icon_path     = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/:~/Dropbox/Pictures/misc/:~/Pictures/downloads
    icon_position = left
    max_icon_size = 60

    ### History ###
    # Pop-up from history be sticky or timeout as if it would normally do.
    # Maximum amount of notifications kept in history
    sticky_history = yes
    history_length = 20

    ### Misc/Advanced ###
    # Print a notification on startup.
    # dmenu path.
    # Browser for opening urls in context menu.
    # Run rule-defined scripts
    # Define title of windows spawned by dunst
    # Define class of windows spawned by dunst
    startup_notification = true
    dmenu                = /usr/bin/dmenu -p dunst:
    browser              = /usr/bin/qutebrowser
    always_run_script    = true
    title                = Dunst
    class                = Dunst

    ### Legacy
    # Use the Xinerama extension instead of RandR for multi-monitor support
    force_xinerama = false

    ### Colors ###
    # Define a color for the separator.
    # Defines color of the frame around the notification window.
    separator_color = frame
    frame_color     = "#132d2e"

[urgency_low]
    background = "#222222"
    foreground = "#ffffff"
    #frame_color = "#932a72"
    frame_color     = "#132d2e"
    timeout    = 10
    icon       = ~/Pictures/downloads/hylianshield.png

[urgency_normal]
    background  = "#210100"
    foreground  = "#bd560a"
    frame_color = "#d9880b"
    frame_width = 1
    timeout     = 10
    icon        = ~/Pictures/downloads/eyeofamagotto.jpg

[urgency_critical]
    background  = "#900000"
    foreground  = "#ffffff"
    frame_color = "#ff0000"
    timeout     = 0
    icon       = ~/Pictures/downloads/hylianshield.png

[shortcuts]
    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close single
    # Close all notifications.
    # Redisplay last message(s).
    # Context menu.
    close     = ctrl+space
    close_all = ctrl+shift+space
    history   = ctrl+grave
    context   = ctrl+shift+period

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = true

### Personalized Notifications ###
# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by # setting the
# "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order to find
# fitting options for rules.

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""



